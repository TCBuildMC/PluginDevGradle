plugins {
    id "java-library"
    id "groovy"
    id "com.gradle.plugin-publish" version "1.2.1"
}

version = rootProject.release_version
group = rootProject.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenCentral()
    gradlePluginPortal()
}

configurations {
}

dependencies {
    compileOnly "org.jetbrains:annotations:24.1.0"
    annotationProcessor(compileOnly("org.projectlombok:lombok:1.18.34"))

    compileOnly "org.jetbrains.kotlin:kotlin-gradle-plugin:2.0.20-RC2"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.17.2"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.2"
    implementation "commons-io:commons-io:2.16.1"

    testImplementation platform("org.junit:junit-bom:5.11.0")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testAnnotationProcessor(testCompileOnly("org.projectlombok:lombok:1.18.34"))
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir "src/main/java"
        }
        groovy {
            srcDir "src/main/groovy"
        }
    }
    test {
        java {
            srcDir "src/test/java"
        }
        groovy {
            srcDir "src/test/groovy"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

sourcesJar {
    duplicatesStrategy DuplicatesStrategy.INCLUDE
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }

    manifest {
        attributes "Implementation-Version": project.version
    }
}

gradlePlugin {
    website = "https://github.com/TCBuildMC/PluginDevGradle"
    vcsUrl = "https://github.com/TCBuildMC/PluginDevGradle"

    plugins {
        pluginDevGradle {
            id = "xyz.tcbuildmc.minecraft.plugin.gradle"
            implementationClass = "xyz.tcbuildmc.minecraft.plugin.gradle.PluginDevGradle"
        }
    }
}

publishing {
    publications {
        create("MavenPlugin", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
        mavenLocal()
        maven {
            name = "Local"
            url = rootProject.buildDir.toPath().resolve("repo").toAbsolutePath().toString()
        }
    }
}
